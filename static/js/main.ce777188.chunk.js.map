{"version":3,"sources":["static/image/mealbot-thumbnail.jpg","static/image/letterbot-thumbnail.png","static/image/profile_img.jpg","data/index.ts","components/common/Profile.tsx","lib/media.ts","components/common/Bio.tsx","components/common/Stack.tsx","components/common/Project.tsx","container/HomeContainer.tsx","pages/HomePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","projects","name","description","thumbnail","mealbotThumbnail","link","stacks","letterbotThumbnail","frontend","level","backend","etc","ProfileTemplate","styled","div","Profile","src","profileImg","alt","className","mediaQuery","maxWidth","media","xxlarge","xlarge","large","medium","small","xsmall","custom","bios","BioTemplate","Bio","useState","index","setIndex","useEffect","updateBio","setInterval","prev","clearInterval","StackRow","title","list","StackRowTemplate","map","data","key","style","backgroundColor","StackTemplate","Stack","Card","CardTempalte","href","stack","ProjectTemplate","Project","info","HomeContainer","HomeTemplate","HomePage","content","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce777188.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mealbot-thumbnail.9f950d03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/letterbot-thumbnail.5389dc72.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_img.e349a9a0.jpg\";","import mealbotThumbnail from '../static/image/mealbot-thumbnail.jpg';\nimport letterbotThumbnail from '../static/image/letterbot-thumbnail.png';\n\nexport type ProjectData = {\n  name: string;\n  description: string;\n  thumbnail: string;\n  link: string;\n  stacks: string[];\n}\n\nexport const projects: ProjectData[] = [{\n    name: '급식봇',\n    description: '전국 급식을 알려주는 카카오톡 급식봇 입니다.',\n    thumbnail: mealbotThumbnail,\n    link: 'http://pf.kakao.com/_xjXYVT',\n    stacks: ['Node.js', 'Koa.js', 'serverless', 'TypeScript'],\n  }, {\n    name: '편지봇 / letterbot',\n    description: '깃헙 액션을 사용하여 매일 아침마다 브리핑을 해주는 봇 입니다.',\n    thumbnail: letterbotThumbnail,\n    link: 'https://github.com/cjaewon/letterbot',\n    stacks: ['Node.js', 'github action', 'TypeScript'],\n  }\n];\n\nexport const stacks = {\n  frontend: [{\n    name: 'JavaScript',\n    description: '가장 잘 쓰고 많이 써본 프로그래밍 언어입니다.',\n    level: 3,\n  }, \n  {\n    name: 'React.js',\n    description: 'React.js를 웹 프로젝트에서 거의 사용하고 계속 배워가는 중입니다.',\n    level: 3,\n  }, \n  {\n    name: 'Vue.js',\n    description: 'Vue로 심화적인 건 개발이 가능하지만 Typescript 지원 부재로 요즘은 리액트를 쓰고 있습니다.',\n    level: 2,\n  },\n  {\n    name: 'Css',\n    description: '완벽하게 사용 할 순 없지만 구글의 힘을 빌려서 보완 가능합니다\u001c',\n    level: 2,\n  },\n  {\n    name: 'Electron',\n    description: '간단한 프로그램을 만들 정도로 사용 할 수 있습니다.',\n    level: 1,\n  }],\n\n  backend: [{\n    name: 'JavaScript(Node.js)',\n    description: '가장 잘 쓰고 많이 써본 프로그래밍 언어입니다.',\n    level: 3,\n  }, \n  {\n    name: 'Koa.js / Express.js',\n    description: 'Express.js 를 주로 사용했지만 요즘은 Koa.js를 많이 사용하고 있습니다.',\n    level: 3,\n  }, \n  {\n    name: 'Typescript',\n    description: '자동완성과 생산성 때문에 거의 모든 프로젝트에서 사용하고 있습니다.',\n    level: 2,\n  },\n  {\n    name: 'Websocket / Socket.io',\n    description: '필요할때 사용 가능 할 정도로 알고 있습니다.',\n    level: 2,\n  },\n  {\n    name: 'Go',\n    description: '생산성과 성능 때문에 관심이 있고 배우고 있는 언어입니다.',\n    level: 2,\n  }],\n\n  etc: [{\n    name: 'Python',\n    description: '예전에 웹 개발로 사용했지만 요즘은 알고리즘을 풀때 사용하는 언어입니다.',\n    level: 2,\n  }, \n  {\n    name: 'Git / Github',\n    description: '간단한 명령어를 사용 할 수 있습니다',\n    level: 1,\n  }, \n  {\n    name: 'Mysql / Mariadb',\n    description: '프로젝트에서는 많이 사용하지만 Orm 사용으로 Sql를 마스터 하진 못 했습니다.',\n    level: 1,\n  }],\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport profileImg from '../../static/image/profile_img.jpg';\n\nconst Profile: React.FC<{}> = () => {\n  return (\n    <ProfileTemplate>\n      <img src={profileImg} alt=\"profile img\" />\n      <h1 className=\"gugi\">Cjaewon</h1>\n    </ProfileTemplate>\n  );\n};\n\nconst ProfileTemplate = styled.div`\n  margin-top: 2rem;\n\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n  align-items: center;\n\n  img {\n    border-radius: 50%;\n\n    width: 9rem;\n    height: 9rem;\n\n    padding: 0.3rem;\n  }\n`;\n\nexport default Profile;","  \nconst mediaQuery = (maxWidth: number) => \n  `@media (max-width: ${maxWidth}px)`;\n\nconst media = {\n  xxlarge: mediaQuery(1920),\n  xlarge: mediaQuery(1440),\n  large: mediaQuery(1200),\n  medium: mediaQuery(1024),\n  small: mediaQuery(768),\n  xsmall: mediaQuery(375),\n  custom: mediaQuery,\n};\n\nexport default media;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport media from '../../lib/media';\n\nconst bios = [\n  '안녕하세요 🖐🏻',\n  '저는 💻 프로그래밍을 좋아하는 개발자 겸 학생이에요.',\n  '주로 🌲Node.js 와 🐿 Go 를 사용합니다',\n];\n\nconst Bio: React.FC<{}> = () => {\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const updateBio = setInterval(() =>\n      setIndex(prev => {\n        if (!bios[prev + 2]) clearInterval(updateBio);\n        return prev + 1;\n      })\n    , 6000);\n\n    return () => clearInterval(updateBio);\n  }, []);\n\n  return (\n    <BioTemplate>\n      <h1 className=\"song-myung\">\" {bios[index]} \"</h1>\n    </BioTemplate>\n  );\n};\n\nconst BioTemplate = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-top: 6rem;\n  margin-bottom: 6rem;\n\n  h1 {\n    font-size: 2.25rem;\n    opacity: 0.85;\n  }\n\n  ${media.small} {\n    h1 {\n      max-width: 23rem;\n    }\n  }\n\n  ${media.xsmall} {\n    h1 {\n      max-width: 17rem;\n    }\n  }\n`;\n\nexport default Bio;","import React from 'react';\nimport styled from 'styled-components';\n\nimport media from '../../lib/media';\nimport { stacks } from '../../data';\n\nfunction getColorbyLevel(level: number): string {\n  const color = ['#C4A370', '#D3D3D3', '#FFCA09'];\n  return color[level - 1];\n}\n\ntype StackProps = {\n  frontend: typeof stacks.frontend;\n  backend: typeof stacks.backend;\n  etc: typeof stacks.etc;\n};\n\nconst Stack: React.FC<StackProps> = ({ frontend, backend, etc }) => {\n  // const ref = useRef<HTMLDivElement>(null);\n  // const scroll = () => {\n  //   if (!ref.current) return;\n\n  //   const rect = ref.current.getBoundingClientRect();\n  //   if((rect.top >= 0) && (rect.bottom <= window.innerHeight - 10)) {\n  //     console.log('You Can View me');\n  //   }\n  // }\n\n  // useScroll(scroll);\n\n  return (\n    <StackTemplate /* ref={ref} */>\n      <h1 className=\"gugi\">기술 스택</h1>\n      <p>숙련도는 색깔로 표시됩니다.</p>\n      <StackRow title=\"Frontend\" list={frontend} />\n      <StackRow title=\"Backend\" list={backend} />\n      <StackRow title=\"Etc\" list={etc} />\n    </StackTemplate>\n  );\n};\n\nfunction StackRow({ title, list }: { title: string, list: Array<{ name: string, description: string, level: number }> }) {\n  return (\n    <StackRowTemplate>\n      <h1>{title}</h1>\n      {\n        list.map(data => \n          <div className=\"row\" key={data.name}>\n            <h2 style={{ backgroundColor: getColorbyLevel(data.level) }}>{data.name}</h2>\n            <span>{data.description}</span>\n          </div>\n        )\n      }\n    </StackRowTemplate>\n  )\n};\n\nconst StackTemplate = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n  align-items: center;\n\n  margin-top: 6rem;\n  margin-bottom: 6rem;\n`;\n\nconst StackRowTemplate = styled.div`\n  width: 47rem;\n\n  h2 {\n    margin-top: 0;\n    margin-bottom: 0;\n\n    font-size: 1.25rem;\n\n    background-color:  #FFCA09; /* #BEBEC0 #E4BD82 */\n    padding: 0.25rem;\n    border-radius: 0.25rem;\n  }\n\n  .row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    margin-top: 0.5rem;\n  }\n  \n  ${media.small} {\n    width: 23rem;\n\n    .row {\n      display: table;\n    }\n\n    h2 {\n      width: 23rem;\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  ${media.xsmall} {\n    width: 17rem;\n\n    .row {\n      display: table;\n    }\n\n    h2 {\n      width: 17rem;\n      margin-bottom: 0.5rem;\n    }\n  }\n`;\n\nexport default Stack;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ProjectData } from '../../data';\n\nimport media from '../../lib/media';\n\n\nconst Project: React.FC<{ data: ProjectData[] }> = ({\n  data,\n}) => {\n  return (\n    <ProjectTemplate>\n      <h1 className=\"title gugi\">프로젝트</h1>\n      {data.map(info => \n        <Card {...info} key={info.name} />\n      )}\n    </ProjectTemplate>\n  )\n};\n\nfunction Card({ name, description, thumbnail, link, stacks }: ProjectData) {\n  return (\n    <CardTempalte>\n      <img src={thumbnail} alt={`${name} thumbnail`} />\n      <div className=\"info\">\n        <h1>{name}</h1>\n        <p>\n          {description}\n        </p>\n        <a href={link}>사용해보기</a>\n      </div>\n      <div className=\"tag\">\n        {\n          stacks.map(stack => <span key={stack}>{stack}</span>)\n        }\n      </div>\n    </CardTempalte>\n  );\n}\n\nconst ProjectTemplate = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n  align-items: center;\n\n  margin-top: 6rem;\n  margin-bottom: 6rem;\n\n  .title {\n    margin-bottom: 5rem;\n  }\n`;\n\nconst CardTempalte = styled.div`\n  max-width: 22rem;\n  box-shadow: 0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0 ,0, 0, 0.05);\n  border-radius: 20px;\n\n  margin-bottom: 2rem;\n\n  img {\n    width: 100%;\n    height: 14rem;\n\n    object-fit: cover;\n\n    border-top-right-radius: 20px;\n    border-top-left-radius: 20px;\n  }\n\n  .info {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n  }\n\n\n  h1 {\n    font-size: 1.25rem;\n\n    margin-top: 0.5rem;\n    margin-bottom: 0.25rem;\n  }\n\n  p {\n    margin-top: 0.45rem;\n    color: #4a5568;\n  }\n\n  a {\n    text-decoration: none;\n    color: #4299e1;\n  }\n\n  .tag {\n    width: 100%;\n\n    display: flex;\n    justify-content: center;\n\n    margin-bottom: 0.75rem;\n\n    span { \n      color: #2D3748;\n      background-color: #ecf0f2;\n\n      border-radius: 12px;\n      padding: 5px;\n\n      margin-right: 0.4rem;\n      margin-left: 0.4rem;\n\n      display: flex;\n      align-items: center;\n    }\n  }\n\n  ${media.small} {\n    max-width: 21rem;\n  }\n`;\n\nexport default Project;","import React from 'react';\n\nimport { projects, stacks } from '../data';\nimport Profile from '../components/common/Profile';\nimport Bio from '../components/common/Bio';\nimport Stack from '../components/common/Stack';\nimport Project from '../components/common/Project';\n\nfunction HomeContainer() {\n  return (\n    <>\n      <Profile />\n      <Bio />\n      <hr/>\n      <Stack \n        frontend={stacks.frontend}\n        backend={stacks.backend}\n        etc={stacks.etc}\n      />\n      <hr/>\n      <Project data={projects} />\n    </>\n  )\n}\n\nexport default HomeContainer;","import React from 'react';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet-async';\n\nimport HomeContainer from '../container/HomeContainer';\n\nfunction HomePage() {\n  return (\n    <HomeTemplate>\n      <Helmet>\n        <title>Hello Cjaewon!</title>\n        <meta\n          name=\"description\"\n          content=\"cjaewon resume\"\n        />\n      </Helmet>\n      <main>\n        <HomeContainer />\n      </main> \n    </HomeTemplate>\n  );\n}\n\nconst HomeTemplate = styled.div`\n\n`;\n\nexport default HomePage;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <BrowserRouter>\n        <App />    \n      </BrowserRouter>\n    </HelmetProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}